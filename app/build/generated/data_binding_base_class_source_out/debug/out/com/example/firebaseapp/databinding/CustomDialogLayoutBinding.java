// Generated by view binder compiler. Do not edit!
package com.example.firebaseapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chaos.view.PinView;
import com.example.firebaseapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomDialogLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button changeNumberButton;

  @NonNull
  public final PinView pinView;

  @NonNull
  public final TextView resendTextview;

  @NonNull
  public final TextView timerTextView;

  @NonNull
  public final TextView tvphone;

  @NonNull
  public final Button verifyOTPButton;

  private CustomDialogLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull Button changeNumberButton, @NonNull PinView pinView,
      @NonNull TextView resendTextview, @NonNull TextView timerTextView, @NonNull TextView tvphone,
      @NonNull Button verifyOTPButton) {
    this.rootView = rootView;
    this.changeNumberButton = changeNumberButton;
    this.pinView = pinView;
    this.resendTextview = resendTextview;
    this.timerTextView = timerTextView;
    this.tvphone = tvphone;
    this.verifyOTPButton = verifyOTPButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomDialogLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomDialogLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_dialog_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomDialogLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeNumberButton;
      Button changeNumberButton = ViewBindings.findChildViewById(rootView, id);
      if (changeNumberButton == null) {
        break missingId;
      }

      id = R.id.pinView;
      PinView pinView = ViewBindings.findChildViewById(rootView, id);
      if (pinView == null) {
        break missingId;
      }

      id = R.id.resendTextview;
      TextView resendTextview = ViewBindings.findChildViewById(rootView, id);
      if (resendTextview == null) {
        break missingId;
      }

      id = R.id.timerTextView;
      TextView timerTextView = ViewBindings.findChildViewById(rootView, id);
      if (timerTextView == null) {
        break missingId;
      }

      id = R.id.tvphone;
      TextView tvphone = ViewBindings.findChildViewById(rootView, id);
      if (tvphone == null) {
        break missingId;
      }

      id = R.id.verifyOTPButton;
      Button verifyOTPButton = ViewBindings.findChildViewById(rootView, id);
      if (verifyOTPButton == null) {
        break missingId;
      }

      return new CustomDialogLayoutBinding((LinearLayout) rootView, changeNumberButton, pinView,
          resendTextview, timerTextView, tvphone, verifyOTPButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
